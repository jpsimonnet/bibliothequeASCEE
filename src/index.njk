---
layout: layouts/base.njk
title: Accueil
---

<div class="home-hero">
  <h1>Bienvenue dans votre bibliothÃ¨que</h1>
</div>
<article class="encadre m-1 encadre-grid">
  <div>
    <h2>ðŸ“…  Horaires de la bibliothÃ¨que</h2>
    <p><strong>La bibliothÃ¨que est ouverte :</strong></p>
    <ul>
      <li>Mardi de 12h30 Ã  14h</li>
      <li>Jeudi de 13h Ã  14h</li>
    </ul>
    
    <h2>ðŸ“š PrÃªts de livres</h2>
    <p><strong>Vous pouvez emprunter :</strong></p>
        <ul>
      <li>5 livres</li>
      <li>pendant 4 semaines</li>
    </ul>

  </div>

  <img class="right fr-responsive-img"
       src="/images/bibliotheque.webp"
       alt="Photo de la bibliothÃ¨que"
       loading="lazy"
       width="250"
       height="150">
</article>


 <div class="search-advanced">
    <input 
      type="search" 
      id="globalSearch" 
      placeholder="Rechercher parmi les livres..."
      autocomplete="off"
    >
    <p class="search-info" id="searchInfo">Entrez au moins 2 caractÃ¨res pour rechercher</p>
  </div>

  <div id="searchResults" class="livres-grid"></div>
  
  <div id="searchLoading" class="loading" style="display: none;">
    <p>Recherche en cours...</p>
  </div>

</div>

 
<script>
(function() {
  let booksData = [];
  const searchInput = document.getElementById('globalSearch');
  const searchResults = document.getElementById('searchResults');
  const searchInfo = document.getElementById('searchInfo');
  const searchLoading = document.getElementById('searchLoading');
  const imagesPath = '{{ "/images/covers/" | url }}';

  fetch('{{ "/search.json" | url }}')
    .then(response => response.json())
    .then(data => {
      booksData = data;
      searchInfo.textContent = `${data.length} livres disponibles. Entrez au moins 2 caractÃ¨res pour rechercher.`;
    })
    .catch(error => {
      searchInfo.textContent = 'Erreur de chargement des donnÃ©es.';
      console.error('Erreur:', error);
    });

  let searchTimeout;
  searchInput.addEventListener('input', () => {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(performSearch, 300);
  });

  function performSearch() {
    const query = searchInput.value.toLowerCase().trim();
    
    if (query.length < 2) {
      searchResults.innerHTML = '';
      searchInfo.textContent = `${booksData.length} livres disponibles. Entrez au moins 2 caractÃ¨res pour rechercher.`;
      return;
    }

    searchLoading.style.display = 'block';

    const results = booksData.filter(book => {
      return book.titre.toLowerCase().includes(query) ||
             book.auteur.toLowerCase().includes(query) ||
             (book.resume && book.resume.toLowerCase().includes(query));
    }).slice(0, 100);

    searchLoading.style.display = 'none';
    displayResults(results, query);
  }

  function displayResults(results, query) {
    if (results.length === 0) {
      searchInfo.textContent = `Aucun rÃ©sultat pour "${query}"`;
      searchResults.innerHTML = '';
      return;
    }

    searchInfo.textContent = `${results.length} rÃ©sultat${results.length > 1 ? 's' : ''} trouvÃ©${results.length > 1 ? 's' : ''} pour "${query}"`;
    
    searchResults.innerHTML = results.map(book => `
      <article class="livre-card">
        <a href="${book.url}">
          <div class="livre-card-cover">
            <img 
              src="${imagesPath}${book.id}.webp" 
              alt="${escapeHtml(book.titre)}"
              loading="lazy"
              width="200"
              height="300"
              data-book-id="${book.id}"
            >
          </div>
          <div class="livre-card-info">
            ${book.type ? `<span class="livre-card-type">${escapeHtml(book.type)}</span>` : ''}
            <h3>${highlightText(escapeHtml(book.titre), query)}</h3>
            <p class="auteur">${highlightText(escapeHtml(book.auteur), query)}</p>
          </div>
        </a>
      </article>
    `).join('');
    
    // Attacher le gestionnaire d'erreur aux nouvelles images
    document.querySelectorAll('#searchResults .livre-card-cover img').forEach(img => {
      img.addEventListener('error', function() {
        if (this.dataset.fallbackApplied) return;
        this.dataset.fallbackApplied = 'true';
        
        this.style.display = 'none';
        
        const fallback = document.createElement('div');
        fallback.style.cssText = `
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: 4rem;
          opacity: 0.7;
        `;
        fallback.textContent = 'ðŸ“š';
        
        this.parentElement.style.position = 'relative';
        this.parentElement.appendChild(fallback);
      });
    });
  }

  function highlightText(text, query) {
    const regex = new RegExp(`(${escapeRegex(query)})`, 'gi');
    return text.replace(regex, '<mark>$1</mark>');
  }

  function escapeRegex(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
  }

  function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }
})();
</script>

<section class="home-featured">
  <h2>NouveautÃ©s</h2>
  <div class="livres-grid">
    {% set toutesNouveautes = [] %}
    {% for livre in livres %}
      {% if livre.nouveaute == "true" %}
        {% set toutesNouveautes = (toutesNouveautes.push(livre), toutesNouveautes) %}
      {% endif %}
    {% endfor %}
    {% set nouveautes = toutesNouveautes | sort(attribute="id") | reverse | limit(20) %}
    
    {% if nouveautes.length == 0 %}
      <p>Aucune nouveautÃ© pour le moment. Nombre total de livres parcourus : {{ livres.length }}</p>
    {% else %}
      {% for livre in nouveautes %}
        <article class="livre-card">
          <a href="{{ ('/livre/' + livre.id + '/') | url }}">
            <div class="livre-card-cover">
              <img 
                src="{{ ('/images/covers/' + livre.id + '.webp') | url }}"
                alt="Couverture de {{ livre.nom }}"
                loading="lazy"
                width="200"
                height="300"
              >
            </div>
            <div class="livre-card-info">
              <h3>{{ livre.nom | truncate(50) }}</h3>
              <p class="auteur">{{ livre.auteur | auteurFormat }}</p>
            </div>
          </a>
        </article>
      {% endfor %}
    {% endif %}
  </div>
  
  <div class="home-cta">
    <a href="{{ '/catalogue/' | url }}" class="btn-primary btn-large">Voir tout le catalogue</a>
  </div>
</section>